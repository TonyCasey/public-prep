name: Deploy Server to Heroku

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual triggering

jobs:
  test-server:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type checking
        run: npm run check

      - name: Run server tests
        run: npx vitest run --coverage

      - name: Test server build
        run: npx tsc --noEmit --project tsconfig.json
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DEEPGRAM_API_KEY: ${{ secrets.DEEPGRAM_API_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}

  deploy-heroku:
    needs: test-server
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --production=false

      - name: Setup Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          
      - name: Login to Heroku
        run: |
          echo "${{ secrets.HEROKU_API_KEY }}" | ~/.local/bin/heroku auth:token
          
      - name: Deploy to Heroku
        run: |
          git remote add heroku https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/public-prep.git
          git push heroku main --force
          
      - name: Run database migrations (if needed)
        run: |
          # Login to Heroku
          echo "${{ secrets.HEROKU_API_KEY }}" | ~/.local/bin/heroku auth:token
          
          # Run migrations if they exist
          if [ -d "migrations" ]; then
            ~/.local/bin/heroku run npm run db:push --app ${{ secrets.HEROKU_APP_NAME }}
          fi

      - name: Health check
        run: |
          sleep 30
          curl --fail https://server.publicprep.ie/api/health || exit 1

      - name: Deployment success notification
        run: echo "ðŸš€ Successfully deployed to Heroku at https://server.publicprep.ie"